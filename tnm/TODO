# -*- mode: markdown -*-

Bugs
====

Debian
------
- Installing libsmi2-dev makes build break.

Generic
-------

### Build
- Should we revamp directory tree of installed files to reflect FHS or
  so (`share` instead of `library` ...)?
- Definitely eliminate legacy names and replace with "standard"
  autoconf/TEA names in Makefile.in.
- Man files must be installed in their corresponding sections
  (nmicmpd..); install-doc target.
- shell target: does not work.  Make the SCRIPT variable load Tnm.
- Check for missing install targets/routines.  Notably: scotty
  invocation after installing MIBs, man pages
- scotty does not build: unix/scotty.c:143: undefined reference to
  `Tcl_FindExecutable'

Tnm::dns
--------

- dns soa command does not return the whole information, example:

	`$ host -t soa iana.org
	iana.org has SOA record sns.dns.icann.org. noc.dns.icann.org. 2016111663 7200 3600 1209600 3600
	`
	`scotty% dns soa iana.org
	sns.dns.icann.org
	`
- (obsolete) dns hinfo command returns errorCode but the error message
   is a domain name, seemingly from the soa record, example:

	`$ host -t hinfo iana.org
	iana.org has no HINFO record
	`
	`scotty% dns hinfo iana.org
	sns.dns.icann.org
	`

Tnm::mib
--------

- At the end of tnmOidObj.c there is a #if/else/endif where
  inconditionally the Oid strings are glued together with '::' instead
  of '!'.  Thus, the returned strings do not conform to the standard
  notation and cannot be used as direct input to Tnm::mib function.

  Ok: not so fast.  The following tests show, that at least some input
  on `mib macro` is allowed to use '::'. 

	`
	scotty% mib macro SNMPv2-MIB::sysDescr
	OBJECT-TYPE
	scotty% mib macro SNMPv2-MIB!sysDescr
	OBJECT-TYPE
	scotty% mib macro SNMPv2-MIB::coldStart
	NOTIFICATION-TYPE
	scotty% mib macro SNMPv2-MIB!coldStart
	NOTIFICATION-TYPE
	scotty% mib macro SNMPv2-MIB!DisplayString
	TYPE-ASSIGNEMENT
	scotty% mib macro SNMPv2-MIB::DisplayString
	unknown MIB node or type "SNMPv2-MIB::DisplayString"
    `

	Setting the "1" to "0" in tnmOidObj.c yields an error in test case
    mit-31-23:

	`UpdateStringProc for type 'tnmOid' failed to create a valid string rep`

- mib parser hangs, in test cases mib-9.1, mib-9.2

- mib walk hangs, test case mib-21.6

- Test case mib-5.5 shows a "TEXTUAL-CONVENTION" for
  SNMPv2-TC!DisplayString, however `mib macro` returns:
  TYPE-ASSIGNMENT.  This might be traceable to: tnmMibParser.c:929,
  see the surrounding text there.

- Test case mib-37.3 seems to indicate, that `mib size` files on SIZE
  specifications with one exact value.  In this case
  'SNMPv2TC!MacAddress' with: `SYNTAX       OCTET STRING (SIZE (6))`.

Tnm::netdb
----------

- services: check netdb-3.8 fails when ports are doubly assigned -
  check disabled.  Should be rewritten.
  
  Some ports are double assigned: e.g. 'pipe-server' and 'search' to
  port 2010.  The first check fail on these.

  Some service names double as aliases: e.g.: dicom

  `acr-nema              104/tcp dicom`

  `dicom                 11112/tcp`

  The second check fail on these.

- services: check netdb-3.9 fail when protocols are doubly
  assigned - check disabled.

- networks: check netdb-7.5 fails entirely, disabled.  Looked up
  results seem strange:

	`
	scotty% netdb networks address loopback
	0.0.0.127
	`

- networks: check netdb-7.6 ditto (as netdb-7.5)

- protcols: check netdp-8.5 disabled.  Protocols ip and hopopt have
  the same number, check should be rewritten.
 
  `
  ip                    0 IP
  hopopt                0 HOPOPT
  `

Tnm::ntp
--------

Seems not to work at all.  I get my time synchronized on my network
via pool.ntp.org, but Tnm::ntp does not reach any of the hosts.

Tnm::smx
--------

Doesn't work at all: `smx peer gone away`.

Test suite disabled smx.test -> l.smx.test


Tnm::snmp
---------

- snmp-2.8 snmp alias FAIlLED
- snmp-2.9 snmp alias FAILED

  `snmp generator -alias focal` does not return a SNMP generator
  session handle at all.

- snmp-X.21 snmp Counter64 type FAILED
	`
	list [catch {snmp expand {{1.3 Counter64 18446744073709551616}}} msg] $msg
	---- Result was:
	0 {{1.3 Counter64 18446744073709551616}}
	---- Result should have been (exact matching):
	1 {unsigned value too large to represent}
	`

-  snmp-X.31 snmp ObjectIdentifier type FAILED
   list [catch {snmp expand {!@#foo!@#} msg} ] $msg
	   `---- Result was:
	   1 {invalid object identifier "1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1"}
	   ---- Result should have been (exact matching):
	   1 {invalid object identifier "!@#foo!@#"}
	   `
   Strange: this is exactly the result expected by snmp-x30!


- snmp-5.7 snmp varbind list expansion FAILED
- snmp-5.8 snmp varbind list expansion FAILED

	`---- Result was:
	{1.3.6.1.2.1.2.2.1.3 Integer32 rfc877x25}
	---- Result should have been (exact matching):
	{1.3.6.1.2.1.2.2.1.3 Integer32 5}
	`

Should this be a MIB related problem?

- snmp-8.3 snmp oid FAILED
- snmp-8.4 snmp oid FAILED
- snmp-9.4 snmp type FAILED
- snmp-10.4 snmp value FAILED

  Probably MIB related problems too

- snmp.test file has an annex section of tests.  Merge/cleanup?

Tnm::sunrpc
-----------

All subcommands of sunrpc segfault when called
- with wrong arguments
- inside a catch {} argument
- if there are less then the required number of arguments
- on the first run.

If you catch a call with *more* then the required numbers of
arguments, or a catch with any nonsense e.g.: `catch {bad workaround}`
no more segfault occurs.  Hover n the test file, at any other time we
got another segfault.  So the respective tests are disabled with the
custom constraint: `runWithEvilCatchCrashWorkaround`

This seems like some initialization (missing) issue.


Tests
=====

All Platforms
-------------

- SunRpc test segfault.


Wishlist
========

Port to
-------

- Alpine Linux
- OpenIndiana (Solaris)
- Minix
- Windows

Functionality
-------------

### Tnm::dns

- Add at least the following lookups: cname ns txt spf srv.
- Add all currently in use lookups.
- Add possibility to craft a lookup type.
- Add IPv6 lookups.

