# Commands covered:  ntp				-*- tcl -*-
#
# This file contains a collection of tests for one or more of the Tnm
# commands. Sourcing this file into scotty runs the tests and generates
# output for errors.  No output means no errors were found.
#
# Copyright (c) 1994-1996 Technical University of Braunschweig.
# Copyright (c) 1996-1997 University of Twente.
# Copyright (c) 1997-1998 Technical University of Braunschweig.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# @(#) $Id: ntp.test,v 1.1.1.1 2006/12/07 12:16:58 karl Exp $

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import ::tcltest::*
}

package require Tnm 3.0
catch {
    namespace import Tnm::ntp
}

set target $tnm(host)
set ::tcltest::testConstraints(ntpNotAvailable) \
	[expr ! [catch {ntp $target foo}]]

# save default settings...
set ntpTimeout [ntp -timeout]
set ntpRetries [ntp -retries]

test ntp-1.1 {ntp no arguments} {
    list [catch {ntp} msg] $msg
} {1 {wrong # args: should be "ntp ?-timeout t? ?-retries r? host arrayName"}}
test ntp-1.2 {ntp too many arguments} {
    list [catch {ntp foo bar boo} msg] $msg
} {1 {wrong # args: should be "ntp ?-timeout t? ?-retries r? host arrayName"}}
test ntp-1.3 {ntp wrong option} {
    list [catch {ntp !@#$ foo} msg] $msg
} {1 {illegal IP address or name "!@#$"}}

test ntp-2.1 {ntp timeout option} {
    ntp -timeout 11
    ntp -timeout
} {11}
test ntp-2.2 {ntp timeout option} {
    list [catch {ntp -timeout foo} msg] $msg
} {1 {expected positive integer but got "foo"}}
test ntp-2.3 {ntp timeout option} {
    list [catch {ntp -timeout 0} msg] $msg
} {1 {expected positive integer but got "0"}}
test ntp-2.4 {ntp retries option} {
    ntp -retries 7
    ntp -retries
} {7}
test ntp-2.5 {ntp retries option} {
    list [catch {ntp -retries foo} msg] $msg
} {1 {expected unsigned integer but got "foo"}}
test ntp-2.6 {ntp retries option} {
    list [catch {ntp -retries -1} msg] $msg
} {1 {expected unsigned integer but got "-1"}}
test ntp-2.7 {ntp options} {
    ntp -retries 0 -timeout 1
    list [ntp -retries] [ntp -timeout]
} {0 1}

# restore default settings...
ntp -retries $ntpRetries -timeout $ntpTimeout

test dns-3.1 {dns address option} ntpNotAvailable {
    global target
    ntp $target foo
    array names foo
} {sys.rootdelay sys.peer peer.stratum sys.stratum peer.peer peer.precision sys.precision sys.rootdispersion sys.system peer.refid peer.rootdelay peer.rootdispersion peer.system sys.refid}

::tcltest::cleanupTests
return

test dns-3.2 {dns address option} {
    list [catch {dns address "127.0.0.1"} msg] $msg
} {0 127.0.0.1}
test dns-3.3 {dns address option} {
    list [catch {dns address "1.2.3.4.5"} msg] $msg
} {1 {non existent domain}}
test dns-3.4 {dns name option} {
    dns name 134.169.34.240
} {www.ibr.cs.tu-bs.de}
test dns-3.5 {dns name option} {
    list [catch {dns name "no name"} msg] $msg
} {1 {illegal IP address "no name"}}
test dns-3.6 {dns name option} {
    list [catch {dns name "1.2.3.4.5"} msg] $msg
} {1 {illegal IP address "1.2.3.4.5"}}
test dns-3.7 {dns hinfo option} {
    list [catch {dns hinfo "1.2.3.4"} msg] $msg
} {1 {cannot reverse lookup "1.2.3.4"}}

::tcltest::cleanupTests
return
